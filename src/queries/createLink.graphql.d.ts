/* ce8d61308991e60004ec2bd1e2d78c0c02c980b4
 * This file is automatically generated by graphql-let. */

import * as Types from "graphql-let/__generated__/__types__";
import { UseMutationOptions } from 'react-query';
export declare type CreateLinkMutationVariables = Types.Exact<{
  title: Types.Scalars['String'];
  url: Types.Scalars['String'];
  imageUrl: Types.Scalars['String'];
  category: Types.Scalars['String'];
  description: Types.Scalars['String'];
}>;
export declare type CreateLinkMutation = {
  __typename?: 'Mutation';
  createLink?: {
    __typename?: 'Link';
    title?: string | null;
    url?: string | null;
    imageUrl?: string | null;
    category?: string | null;
    description?: string | null;
  } | null;
};
export declare const CreateLinkDocument = "\n    mutation CreateLink($title: String!, $url: String!, $imageUrl: String!, $category: String!, $description: String!) {\n  createLink(\n    title: $title\n    url: $url\n    imageUrl: $imageUrl\n    category: $category\n    description: $description\n  ) {\n    title\n    url\n    imageUrl\n    category\n    description\n  }\n}\n    ";
export declare const useCreateLinkMutation: <TError = unknown, TContext = unknown>(dataSource: {
  endpoint: string;
  fetchParams?: RequestInit;
}, options?: UseMutationOptions<CreateLinkMutation, TError, Types.Exact<{
  title: Types.Scalars['String'];
  url: Types.Scalars['String'];
  imageUrl: Types.Scalars['String'];
  category: Types.Scalars['String'];
  description: Types.Scalars['String'];
}>, TContext>) => import("react-query").UseMutationResult<CreateLinkMutation, TError, Types.Exact<{
  title: Types.Scalars['String'];
  url: Types.Scalars['String'];
  imageUrl: Types.Scalars['String'];
  category: Types.Scalars['String'];
  description: Types.Scalars['String'];
}>, TContext>;